package com.example.demo.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.exception.UserNotFoundException;
import com.example.demo.model.Car;
import com.example.demo.model.User;
import com.example.demo.repository.CarRepository;
import com.example.demo.repository.UserRepository;

@RestController
@CrossOrigin("http://localhost:3000")
public class CarController {
	@Autowired
	private CarRepository carRepository;
	
	
	// POST Methods
	
	@PostMapping("/car")
	Car newCar(@RequestBody Car newCar) {
		return carRepository.save(newCar);
	}
	
	
	
	
	
	// GET Methods
	
	@GetMapping("/cars")
	List<Car> getAllCars(){
		return carRepository.findAll();
	}
	
	
	
	
	
	// Getting specific user with respect to userid
	
	@GetMapping("/car/{id}")
	Car getUserByCar(@PathVariable Long id) {
		return carRepository.findById(id)
			.orElseThrow(()->new UserNotFoundException(id));
	}
	
	
	
	
	
	// for editing the user
	
	@PutMapping("/user/{id}")
	User updateUser(@RequestBody User newUser, @PathVariable Long id) {
		return userRepository.findById(id)
			.map(user -> {
				user.setUsername(newUser.getUsername());
				user.setName(newUser.getName());
				user.setEmail(newUser.getEmail());
				return userRepository.save(user);
			}).orElseThrow(()->new UserNotFoundException(id));
	}
	
	
	
	
	
	
	// for deleting the user
	
	@DeleteMapping("/user/{id}")
	String deleteUser(@PathVariable Long id) {
		if(!userRepository.existsById(id)) {
			throw new UserNotFoundException(id);
		}
		userRepository.deleteById(id);
		return "User with id " + id + " has been deleted successfully.";
	}
}